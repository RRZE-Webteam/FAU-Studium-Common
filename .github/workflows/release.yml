name: Release

on:
  workflow_call:
    secrets:
      DEPLOYBOT_EMAIL:
        required: true
      DEPLOYBOT_USER:
        required: true

jobs:
  build-release:
    runs-on: ubuntu-latest
    env:
      TAG_NAME: ''
      TAG_BRANCH_NAME: ''
      NO_CHANGES: ''

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ ((github.ref_type == 'tag') && github.sha) || github.ref }}

      - name: Extract tag name into env
        run: echo "TAG_NAME=$(echo ${GITHUB_REF#refs/*/})" >> $GITHUB_ENV

      - name: Checkout new branch when running for a tag
        if: ${{ github.ref_type == 'tag' }}
        run: |
          git checkout -b bot/release/${{ github.sha }}
          echo "TAG_BRANCH_NAME=bot/release/${{ github.sha }}" >> $GITHUB_ENV

      - name: Install Composer dependencies
        uses: ramsey/composer-install@v2
        with:
          composer-options: "--no-dev"

      - name: Build assets
        run: |
          yarn install --frozen-lockfile
          yarn build

      - name: Setup Git
        run: |
          git config --global user.email "${{ secrets.DEPLOYBOT_EMAIL }}" 
          git config --global user.name "${{ secrets.DEPLOYBOT_USER }}"
          git config --global advice.addIgnoredFile false
          git config --global push.autoSetupRemote true

      - name: Git add, commit
        run: |
          git add -f assets/ vendor/
          git commit -m "[BOT] Build package" --no-verify || ((echo "NO_CHANGES=yes" >> $GITHUB_ENV) && (echo "No changes to commit"))

      - name: Git push
        if: ${{ env.NO_CHANGES != 'yes' }}
        run: git push

      - name: Move tag
        if: ${{ env.TAG_NAME != '' && env.NO_CHANGES != 'yes' }}
        run: |
          git tag -d ${{ env.TAG_NAME }}
          git push origin :refs/tags/${{ env.TAG_NAME }}
          git tag ${{ env.TAG_NAME }}
          git push origin --tags

      - name: Delete tag branch
        if: ${{ always() && (env.TAG_BRANCH_NAME != '' && env.NO_CHANGES != 'yes') }}
        run: |
          git checkout --detach
          git branch -d ${{ env.TAG_BRANCH_NAME }}
          git push origin --delete ${{ env.TAG_BRANCH_NAME }}
